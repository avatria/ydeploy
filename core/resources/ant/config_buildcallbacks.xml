<?xml version="1.0"?>
<!--
	Copyright 2014-2015 The ydeploy Authors
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
-->
<project name="ydeploy-core-config_buildcallbacks">

	<property environment="env" />
	<property name="hybris_env" value="" />
	<property name="hybris_server_id" value="" />
	<var name="yenv" value="" />
	<var name="yserverid" value="" />

	<macrodef name="deploylocalproperties">
		<sequential>
			<echo message="deploylocalproperties starting..." />
			<!-- First, derive yenv and yserverid vars -->
			<if>
				<not>
					<equals arg1="${hybris_env}" arg2="" />
				</not>
				<then>
					<var name="yenv" value="${hybris_env}" />
				</then>
				<elseif>
					<and>
						<isset property="env.HYBRIS_ENV" />
						<not>
							<equals arg1="${env.HYBRIS_ENV}" arg2="" />
						</not>
					</and>
					<then>
						<var name="yenv" value="${env.HYBRIS_ENV}" />
					</then>
				</elseif>
			</if>
			<if>
				<not>
					<equals arg1="${hybris_server_id}" arg2="" />
				</not>
				<then>
					<var name="yserverid" value="${hybris_server_id}" />
				</then>
				<elseif>
					<and>
						<isset property="env.HYBRIS_SERVER_ID" />
						<not>
							<equals arg1="${env.HYBRIS_SERVER_ID}" arg2="" />
						</not>
					</and>
					<then>
						<var name="yserverid" value="${env.HYBRIS_SERVER_ID}" />
					</then>
				</elseif>
			</if>

			<echo message="ydeploy yenv: ${yenv}" />
			<echo message="ydeploy yserverid: ${yserverid}" />

			<mkdir dir="${HYBRIS_TEMP_DIR}/ydeploy" />
			<property name="mergedServerFile" value="${HYBRIS_TEMP_DIR}/ydeploy/local.properties" />
			<concat destfile="${mergedServerFile}" overwrite="true"
				fixlastline="yes">
				<fileset
					file="${HYBRIS_CONFIG_DIR}/ydeploy/localproperties/global.properties" />
				<fileset
					file="${HYBRIS_CONFIG_DIR}/ydeploy/localproperties/${yenv}/${yenv}.properties" />
				<fileset
					file="${HYBRIS_CONFIG_DIR}/ydeploy/localproperties/${yenv}/${yserverid}.properties" />
			</concat>
			<!-- 
				The propertyfile task removes duplicate property definitions from the merged file 
				and uses the last definition when multiple exist 
			-->
			<propertyfile file="${mergedServerFile}" />
			<copy file="${mergedServerFile}" tofile="${HYBRIS_CONFIG_DIR}/local.properties" />
			<customizelocalproperties />
			<echo message="deploylocalproperties complete" />
		</sequential>
	</macrodef>

	<!-- This is where you would inject any dynamic values into the local.properties -->
	<macrodef name="customizelocalproperties">
		<sequential>
			<replace file="${HYBRIS_CONFIG_DIR}/local.properties">
				<replacefilter token="@dummytoken@" value="dummyvalue" />
			</replace>
		</sequential>
	</macrodef>

	<macrodef name="deployhybrislicense">
		<sequential>
			<if>
				<and>
					<isset property="HYBRIS_CONFIG_DIR" />
					<not>
						<available file="${HYBRIS_CONFIG_DIR}/licence/hybrislicence.jar" />
					</not>
					<available file="${HYBRIS_CONFIG_DIR}/ydeploy/license/hybrislicence.jar" />
				</and>
				<then>
					<mkdir dir="${HYBRIS_CONFIG_DIR}/licence" />
					<copy todir="${HYBRIS_CONFIG_DIR}/licence" failonerror="true">
						<fileset dir="${HYBRIS_CONFIG_DIR}/ydeploy/license">
							<include name="**/hybrislicence.jar" />
						</fileset>
					</copy>
				</then>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="deployconfig">
		<sequential>
			<deployhybrislicense />
			<deploylocalproperties />
		</sequential>
	</macrodef>

	<deployconfig />

</project>
